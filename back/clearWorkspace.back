"scene" import

(
  { noop 1 2 3 4 5 6 print print print print print print } "test1" store { noop a b c d e f print print print print print print } "test2" store
  test1 "test1" store test2 "test2" store

  ( { 1 2 3 4 5 6 print print print print print print } { a b c d e f print print print print print print } )
  slide ( swap slip 1 sP )


  { |B { |B 1 2 3 4 5 6 print print print print print print } { |B a b c d e f print print print print print print } }
  0 "cc" store ( cc 1 + dup "cc" store 36 < ) ( slip ) while cc print

) "cw_test" store


(
  pointToClearanceMap aboutFace currentPose cw_clearWorkspace
) "cw_sweepToGreen" store

(
  moveEeToPoseWord waitUntilAtCurrentPosition
  1 changeToHeight
  0.01 setGridSize ( zDown ) 10 replicateWord

  cw_viewIsClear
) "cw_workspaceIsClear" store

( 
  slide ( pushClassLabels 1 sP ) "cw_swap_classLabels" store
  focusedClassLabel "cw_swap_targetClass" store

  setMovementStateToMoving comeToStop 
  sceneClearObservedMap sceneClearPredictedObjects

  initializeAndFocusOnTempClass
  tempRecaptureServo
  scenePushNumSceneObjects 0 = 1 0 ifte

  endArgs cw_swap_classLabels setClassLabels 
  cw_swap_targetClass setTargetClass
) "cw_viewIsClear" store

( 
  setMovementStateToMoving comeToStop visionCycleNoClassify
  numBlueBoxes 0 = 1 0 ifte
) "cw_viewIsClear_old" store

(
  slide ( pushClassLabels 1 sP ) "cw_swap_classLabels" store
  focusedClassLabel "cw_swap_targetClass" store

  initializeAndFocusOnTempClass
  ( tempRecaptureServo ) 2 replicateWord

  endArgs cw_swap_classLabels setClassLabels 
  cw_swap_targetClass setTargetClass
) "cw_servo_for_flick" store

(
  halfImpulse 
  moveEeToPoseWord 

  0.01 setGridSize 
  ( 
    localXUp localZUp 
    endStackCollapseNoop
  ) 20 replicateWord 
  waitUntilAtCurrentPosition 
  comeToStop
  pressUntilEffortInit 0.05 setSpeed pressUntilEffort 

  fullImpulse 
  ( 
    localZDown 
  ) 3 replicateWord 
  comeToHover 
  ( 
    localZUp 
  ) 2 replicateWord  
  setMovementStateToMoving comeToHover 
  0.05 setSpeed 

  ( 
    localXDown 
    endStackCollapseNoop
  ) 30 replicateWord 
  ( 
    closeGripper waitUntilGripperNotMoving 
    isGripperGripping ! ( openGripper waitUntilGripperNotMoving ) ift
  ) 3 replicateWord

  waitUntilAtCurrentPosition
  openGripper

) "cw_flick" store

(
  cw_servo_for_flick
  currentPose

  dup
  moveEeToPoseWord 0.01 setGridSize ( yUp ) 4 replicateWord currentPose
  cw_flick

  dup
  cw_flick

  dup
  moveEeToPoseWord 0.01 setGridSize ( yDown ) 4 replicateWord currentPose
  cw_flick

  pop
) "cw_tri_flick" store

(
  ">>>> clearing workspace a <<<<" print
  ( dup quarterImpulse cw_workspaceIsClear ! ) ( 
    "Workspace not clear, flicking..." print
    cw_tri_flick
  ) while 
  pop
) "cw_clearWorkspace_a" store

(
  1 setCurrentIKBoundaryMode
  ">>>> clearing workspace <<<<" print
  dup 
  moveEeToPoseWord 0.01 setGridSize ( xDown ) 10 replicateWord currentPose
  cw_clearWorkspace_a

  dup 
  cw_clearWorkspace_a

  dup 
  moveEeToPoseWord 0.01 setGridSize ( xUp ) 10 replicateWord currentPose
  cw_clearWorkspace_a

  dup 
  moveEeToPoseWord 0.01 setGridSize ( xUp ) 15 replicateWord currentPose
  cw_clearWorkspace_a

  pop
) "cw_clearWorkspace_old" store

0.35 "cw_clearWorkspace_discrepancy_thresh_val" store
20 "cw_clearWorkspace_discrepancy_thresh_cells" store
10 "cw_clearWorkspace_max" store
(
  tempSwapToBlocks
  "catScan5PlayBg" sceneLoadBackgroundMap

  1 setCurrentIKBoundaryMode
  ">>>> clearing workspace scene <<<<" print

  0 "cw_clearWorkspace_counter" store
  1 "cw_clearWorkspace_rescan" store
  ( 
    cw_clearWorkspace_counter cw_clearWorkspace_max < 
  ) (
      dup
    moveEeToPoseWord waitUntilAtCurrentPosition
    1 changeToHeight


    sceneClearPredictedObjects 
    catScan5PlayTakeScene
  
    "Attempt " cw_clearWorkspace_counter " out of " cw_clearWorkspace_max + + + print
	cw_clearWorkspace_discrepancy_thresh_val sceneCountDiscrepantCells " discrepant cells at val threshold " 
	cw_clearWorkspace_discrepancy_thresh_val " cell threshold " cw_clearWorkspace_discrepancy_thresh_cells 
      + + + +
    print

    cw_clearWorkspace_discrepancy_thresh_val sceneCountDiscrepantCells cw_clearWorkspace_discrepancy_thresh_cells < (
      "Great! Workspace clear, moving on." print
      cw_clearWorkspace_max "cw_clearWorkspace_counter" store
      0 "cw_clearWorkspace_rescan" store
    ) (
      "Workspace not clear, attempting to flick object." print
      
      tempServoToBestObject waitUntilAtCurrentPosition
      cw_tri_flick

      cw_clearWorkspace_counter 1 + "cw_clearWorkspace_counter" store
    ) ifte
  ) while


  cw_clearWorkspace_rescan (
    "Sadly, we timed out and the workspace is not clear. Updating the play workspace background map." print
    catScan5UpdatePlayBg
  ) ift
  
  tempRestoreFromBlocks

  print
) "cw_clearWorkspace" store








