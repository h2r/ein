(
  1 sceneSetFixationMode

  200 "tempReconstructStreamTakeSceneSamples" store
  0 sceneSetDepthPatchHalfWidth

  201 sceneSetAngularApertureRows 201 sceneSetAngularApertureCols

  quarterImpulse
  waitUntilAtCurrentPosition

  /* do binning from this height for good sample size */
  1 changeToHeight 
  currentPose "tempUpdateSpiralPos" store

  0 "tempChrThisHeight" store
  3 "tempChrEndHeight" store

  (
    tempChrThisHeight tempChrEndHeight < 
    tempChrThisHeight tempChrEndHeight = or 
  ) (
    tempChrThisHeight changeToHeight 

    /*
    sceneInit 
    */
    slfgRebase

    sceneClearObservedMap
    clearStreamBuffers

    tempUpdateSpinCoreNoClean

    quarterImpulse
    tempUpdateSpiralPos moveEeToPoseWord
    tempChrThisHeight changeToHeight 
    waitUntilAtCurrentPosition

    /* finds the current height difference */
    /*
    tempReconstructWithZTopZ 0.388 divide 0.002 times  "slfgRebaseCellWidth" store slfgRebase
    */ 

    0.001 "slfgRebaseCellWidth" store slfgRebaseTable

    /* this actually needs to happen after movement so position is still correct for FIXATION calibrators */
    tempReconstructWithZ
    tempUpdateMaps

    /*
    tempChrThisHeight sceneSetHeightReticleFromVariance
    */
    slide ( scenePushPixelOfMinVariance  1 sP )

      tempChrThisHeight 1 +
    "tempChrThisHeight" store
    
    /*
    pauseStackExecution
    */
  ) while 
  
  calibrateHeightReticlesSetAll

  0 sceneSetFixationMode
) "calibrateHeightReticles" store

(
  tempChrEndHeight "tempChrThisHeight" store
  (
    tempChrThisHeight 0 > 
    tempChrThisHeight 0 = or 
  ) (
      tempChrThisHeight 
	swap 
      slip
    sceneSetHeightReticleFromPixel

      tempChrThisHeight 1 -
    "tempChrThisHeight" store
  ) while 
) "calibrateHeightReticlesSetAll" store

(
  201 sceneSetAngularApertureRows 201 sceneSetAngularApertureCols

  1 sceneSetFixationMode
  quarterImpulse
  waitUntilAtCurrentPosition

  /* do binning from this height for good sample size */
  1 changeToHeight 
  currentPose "tempUpdateSpiralPos" store

  0 changeToHeight 
  0.01 setGridSize ( zDown ) 12 replicateWord
  waitUntilAtCurrentPosition

  sceneInit 
  sceneClearObservedMap
  clearStreamBuffers

  0.001 "slfgRebaseCellWidth" store slfgRebaseTable

  tempUpdateZoomCoreNoClean

  quarterImpulse
  tempUpdateSpiralPos moveEeToPoseWord
  waitUntilAtCurrentPosition

  /* this actually needs to happen after movement so position is still correct for FIXATION calibrators */
  tempReconstructFromStream
  tempUpdateMaps

  /*
  sceneSetVanishingPointFromVariance
  */

  
  0 sceneSetFixationMode
) "calibrateVanishingPointReticle" store

(
  0.03 "thisGridSize" store

  sceneClearDepthStack

  /* two types of averaging, variance over depth stack and again by averaging coordinatewise estimates */

  waitUntilAtCurrentPosition
  calibrateVanishingPointReticle
  scenePushOntoDepthStack
  scenePushPixelOfMinVariance

  thisGridSize setGridSize 
  xUp yUp
  calibrateVanishingPointReticle
  scenePushOntoDepthStack
  scenePushPixelOfMinVariance

  thisGridSize setGridSize 
  xDown xDown
  calibrateVanishingPointReticle
  scenePushOntoDepthStack
  scenePushPixelOfMinVariance

  thisGridSize setGridSize 
  yDown yDown
  calibrateVanishingPointReticle
  scenePushOntoDepthStack
  scenePushPixelOfMinVariance

  thisGridSize setGridSize 
  xUp xUp
  calibrateVanishingPointReticle
  scenePushOntoDepthStack
  scenePushPixelOfMinVariance

  thisGridSize setGridSize 
  xDown yUp
  waitUntilAtCurrentPosition

  /* average the coordinates that were on the stack */
  printStacks

  0 "vanishingXTotal" store
  0 "vanishingYTotal" store
  0 "vanishingNumSamples" store
  (
      vanishingXTotal +
    "vanishingXTotal" store

      vanishingYTotal +
    "vanishingYTotal" store

      vanishingNumSamples 1 +
    "vanishingNumSamples" store
  ) 5 replicateWord

    vanishingXTotal vanishingNumSamples divide  
  "vanishingXAve" store

    vanishingYTotal vanishingNumSamples divide  
  "vanishingYAve" store

  vanishingYAve vanishingXAve sceneSetVanishingPointFromPixel

  /* 
  scenePushPixelOfMinStackVariance sceneSetVanishingPointFromPixel
  */ 


) "calibrateVanishingPointReticleMultiSample" store

0.2 "magCalDelta" store
10 "magCalSteps" store
0.00 "magCalMinVarImprovement" store
( cameraGetIdxMagX ) "magCalGetter" store
( cameraSetIdxMagX ) "magCalSetter" store
(
  0 cameraSetCalibrationMode

  magCalGetter "magCalInitial" store

    magCalSteps
    2.0
  / 
  -1.0 *
  magCalDelta *
  magCalInitial +
  "magCalLo" store

    magCalSteps
    2.0
  / 
  magCalDelta *
  magCalInitial +
  "magCalHi" store

  magCalLo "magCalThis" store

  /*
  sceneClearDepthStack
  */

  1000000000000000 "magCalMinVar" store
  -1 "magCalMinVarMag" store
  0 "magCalNumWins" store

  0.001 "slfgRebaseCellWidth" store slfgRebaseTable

  ( 
    magCalThis magCalHi < 
    magCalThis magCalHi = or
  ) (
    magCalThis magCalSetter 

	  currentPose
	eePosePZ
	currentTableZ
      +
    "tempReconstructWithZTopZ" store 
    tempReconstructWithZ

    /*
    tempUpdateMaps
    */

	scenePushAverageCrCbSigmaSquared 
      dup 
      magCalMinVar magCalMinVarImprovement - 
    < (
      "magCalMinVar" store
      magCalThis "magCalMinVarMag" store
      "This WAS INDEED a new winner." print
	magCalNumWins 1 +
      "magCalNumWins" store
    ) (
      "This was not a new winner." print
      pop
    ) ifte

    " just tried magnification " magCalThis + print

    /*
    scenePushOntoDepthStack
    pauseStackExecution
    */

      magCalThis magCalDelta + 
    "magCalThis" store
  ) while

  " The winner was " magCalMinVarMag " with a variance of " magCalMinVar + + + print

  magCalNumWins 1 > (
    "We won more than once so setting the new value." print
    magCalMinVarMag magCalSetter 
  ) (
    "We only won " magCalNumWins " times but we are SETTING THE VALUE ANYWAY." + + print
    magCalMinVarMag magCalSetter 
  ) ifte


) "tempMagCalibrationGridSearcher" store

0 "tempChrStartHeight" store
3 "tempChrEndHeight" store
0.0 "tempChrExtraZ" store
(
  0 cameraSetCalibrationMode
  351 sceneSetAngularApertureRows 551 sceneSetAngularApertureCols

  0 sceneSetFixationMode
  quarterImpulse
  waitUntilAtCurrentPosition

  1 changeToHeight 
  currentPose "tempUpdateSpiralPos" store

  tempChrStartHeight "tempChrThisHeight" store

  (
    tempChrThisHeight tempChrEndHeight < 
    tempChrThisHeight tempChrEndHeight = or 
  ) (
    tempChrThisHeight changeToHeight 

        currentPose 
	  currentPose 
	  eePosePZ tempChrExtraZ
	+ 
      setEEPosePZ 
    moveEeToPoseWord waitUntilAtCurrentPosition comeToStop

    sceneInit 
    sceneClearObservedMap
    clearStreamBuffers
    waitUntilAtCurrentPosition

    tempUpdateMagCoreNoClean

    quarterImpulse
    tempUpdateSpiralPos moveEeToPoseWord

    /* necessary for mag changes to take effect properly */
    tempChrThisHeight changeToHeight 
    waitUntilAtCurrentPosition

    tempMagCalibrationGridSearcher

      tempChrThisHeight 1 +
    "tempChrThisHeight" store
    
    /*
    pauseStackExecution
    */
  ) while 

/* this one takes images and optimizes each height only on its images */
  
) "calibrateOnBundleOneDimension" store

(
  0 cameraSetCalibrationMode
  351 sceneSetAngularApertureRows 351 sceneSetAngularApertureCols

  0 sceneSetFixationMode
  quarterImpulse
  waitUntilAtCurrentPosition

  1 changeToHeight 
  currentPose "tempUpdateSpiralPos" store

  tempChrStartHeight "tempChrThisHeight" store

  (
    tempChrThisHeight tempChrEndHeight < 
    tempChrThisHeight tempChrEndHeight = or 
  ) (
    tempChrThisHeight changeToHeight 

        currentPose 
	  currentPose 
	  eePosePZ tempChrExtraZ
	+ 
      setEEPosePZ 
    moveEeToPoseWord waitUntilAtCurrentPosition comeToStop

    sceneInit 
    sceneClearObservedMap
    clearStreamBuffers
    waitUntilAtCurrentPosition

    tempUpdateMagCoreNoClean
    endStackCollapseNoop


      tempChrThisHeight 1 +
    "tempChrThisHeight" store
    
  ) while 

  quarterImpulse
  tempUpdateSpiralPos moveEeToPoseWord
  waitUntilAtCurrentPosition

  tempChrStartHeight "tempChrThisHeight" store
  (
    tempChrThisHeight tempChrEndHeight < 
    tempChrThisHeight tempChrEndHeight = or 
  ) (
    tempChrThisHeight changeToHeight 
      tempChrThisHeight 1 +
    "tempChrThisHeight" store

    tempMagCalibrationGridSearcher
    
  ) while 

  /*
  pauseStackExecution
  */
  
/* this one takes images at all 4 heights then optimizes each height with images at all 4 heights */
) "calibrateOnBundleOneDimensionJointHeights" store

(
  /*
  depth dependent magnification 
  don't bias different heights by the others,
   address each height separately
  */

  /* 
  */

  
  1.375 "magCalBase" store
  64 "magCalSteps" store
  0.04 "magCalDelta" store

  0 changeToHeight
  magCalBase cameraSetIdxMagY 
  magCalBase cameraSetIdxMagX 

  1 changeToHeight
  magCalBase cameraSetIdxMagY 
  magCalBase cameraSetIdxMagX 

  2 changeToHeight
  magCalBase cameraSetIdxMagY 
  magCalBase cameraSetIdxMagX 

  3 changeToHeight
  magCalBase cameraSetIdxMagY 
  magCalBase cameraSetIdxMagX 


  0 cameraSetCalibrationMode

  100 "tempReconstructStreamTakeSceneSamples" store
  0 "tempChrStartHeight" store
  1 "tempChrEndHeight" store
  0.0 "tempChrExtraZ" store

  ( cameraGetIdxMagX ) "magCalGetter" store
  ( cameraSetIdxMagX ) "magCalSetter" store
  calibrateOnBundleOneDimension

  ( cameraGetIdxMagY ) "magCalGetter" store
  ( cameraSetIdxMagY ) "magCalSetter" store
  calibrateOnBundleOneDimension


  /*
  */


  /* 
  although we don't use heights 3 and 4 explicitly, setting them to the value of height 1 helps the quadratic
  fit better if we don't feel like collecting them explicitly
  */
  1 changeToHeight cameraGetIdxMagY dup 2 changeToHeight cameraSetIdxMagY 3 changeToHeight cameraSetIdxMagY
  1 changeToHeight cameraGetIdxMagX dup 2 changeToHeight cameraSetIdxMagX 3 changeToHeight cameraSetIdxMagX
  cameraFitHyperbolic 2 cameraSetCalibrationMode

) "calibrateMagnification" store

(
  /*
  gripper projections
  these parameters interact through the pixelToGlobal function so they might need
    to address data at all heights jointly.

  variance reduction was successful during joint optimization but it lost metric
    calibration somehow in the process. maybe a strange interaction between
    the amount of space over which the average is happening due to the projection's
    changes and the variance due to focus.

  separate case not fully chased because calibration from spinning was adequate.
  */

  200 "tempReconstructStreamTakeSceneSamples" store

  0 "tempChrStartHeight" store
  3 "tempChrEndHeight" store

  1 "magCalDelta" store
  16 "magCalSteps" store
  ( cameraGetCurrentHeightReticleX ) "magCalGetter" store
  ( cameraSetCurrentHeightReticleX ) "magCalSetter" store
  calibrateOnBundleOneDimensionJointHeights

  1 "magCalDelta" store
  16 "magCalSteps" store
  ( cameraGetCurrentHeightReticleY ) "magCalGetter" store
  ( cameraSetCurrentHeightReticleY ) "magCalSetter" store
  calibrateOnBundleOneDimensionJointHeights

) "calibrateBundleHeight" store

(
  setTable
    currentPose
  setGripperMaskWithMotion
  moveEeToPoseWord
/*
*/
  initializeAndFocusOnNewClass

  calibrateHeightReticles
  calibrateMagnification

  /*
  calibrateVanishingPointReticleMultiSample
  */
) 
"Calibrate the RGB camera; start from a position near the table as we set the table height first.  Make sure you've set up the magic circle with magic paper" 
"calibrateRGBCameraIntrinsics" define

